<?php

namespace Modules\Refund\Http\Requests;

use Illuminate\Foundation\Http\FormRequest;

class HandleUserRefundRequest extends FormRequest
{
    private array $validationMessage;

    public function rules(): array
    {
        return [
            "request_item_id" => "required|array",
            "refund_reason" => "required|array",
            "refund_quantity" => "required|array",
            "additional_information" => "nullable|string",
            "preferred_option" => "required|exists:refund_preferred_options,id",
            "files.*" => "mimes:jpeg,jpg,png,gif,tif,pdf|nullable",
            "preferred_option_fields" => "nullable",
            "qr_code_file" => "nullable"
        ] + $this->reasonValidation();
    }

    protected function prepareForValidation()
    {
        return $this->merge([
            "preferred_option_fields" => json_encode($this->fields)
        ]);
    }

    private function reasonValidation(): array
    {
        $validation = [];
        foreach ($this->request_item_id as $item) {
            $validation["refund_reason." . $item] = "required|exists:refund_reasons,id";
            $validation["refund_quantity." . $item] = "required|integer";
            $this->validationMessage["refund_reason." . $item] = "Please select a refund reason for " . $this->product_name[$item] ?? "";
        }

        return $validation;
    }

    public function messages(): array
    {
        return $this->validationMessage; //  Change the autogenerated stub
    }

    public function authorize(): bool
    {
        return true;
    }
}
